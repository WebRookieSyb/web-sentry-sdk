{"code":"import { getGlobalObject } from './env';\r\nvar global = getGlobalObject();\r\nvar PREFIX = 'Web Sentry Logger ';\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(prefix) {\r\n        if (prefix === void 0) { prefix = 'Logger '; }\r\n        this.enabled = false;\r\n        this.prefix = prefix;\r\n    }\r\n    Logger.prototype.disable = function () {\r\n        this.enabled = false;\r\n    };\r\n    Logger.prototype.enable = function () {\r\n        this.enabled = true;\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        console.log(this.prefix + \"[Log]: \" + args.join(' '));\r\n    };\r\n    Logger.prototype.wran = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        console.log(this.prefix + \"[Wran]: \" + args.join(' '));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        console.log(this.prefix + \"[Error]: \" + args.join(' '));\r\n    };\r\n    return Logger;\r\n}());\r\nglobal.__WebSentryGlobal__ = global.__WebSentryGlobal__ || {};\r\nvar logger = global.__WebSentryGlobal__.logger || (global.__WebSentryGlobal__.logger = new Logger(PREFIX));\r\nexport { logger };\r\n","references":["/Users/shuyibin/SYB/github/web-sentry-sdk/src/util/env.ts"],"dts":{"name":"/Users/shuyibin/SYB/github/web-sentry-sdk/util/log.d.ts","writeByteOrderMark":false,"text":"declare const logger: any;\r\nexport { logger };\r\n"}}
