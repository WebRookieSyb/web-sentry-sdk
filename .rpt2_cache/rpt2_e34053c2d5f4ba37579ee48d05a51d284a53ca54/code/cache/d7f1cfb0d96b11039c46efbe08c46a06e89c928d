{"code":"import { hub, EventBus } from './util/hub';\r\nimport { logger } from './util/log';\r\nvar Page = /** @class */ (function () {\r\n    function Page() {\r\n        this.isActive = true;\r\n        this.init();\r\n    }\r\n    Page.prototype.init = function () {\r\n        var _this = this;\r\n        hub.on(EventBus.CHANGE_ACTIVE, function (activeStatus) {\r\n            logger.log(\"Page accepted \" + EventBus.CHANGE_ACTIVE + \": \" + activeStatus);\r\n            _this.isActive = activeStatus;\r\n        });\r\n        window.addEventListener('load', function () {\r\n            if (!_this.isActive) {\r\n                return;\r\n            }\r\n            var performance = _this.getPagePerformance();\r\n            logger.log(\"Page get performance: \" + JSON.stringify(performance));\r\n            hub.emit(EventBus.GET_CLIENT, performance);\r\n        });\r\n    };\r\n    Page.prototype.getPagePerformance = function () {\r\n        if (!window.performance || !window.performance.timing) {\r\n            return;\r\n        }\r\n        var timing = window.performance.timing;\r\n        var performance = {\r\n            redirectt: (timing.redirectEnd - timing.redirectStart) / 1000,\r\n            dnst: (timing.domainLookupEnd - timing.domainLookupStart) / 1000,\r\n            tcpt: (timing.connectEnd - timing.connectStart) / 1000,\r\n            wit: (timing.domLoading - timing.fetchStart) / 1000,\r\n            responset: (timing.responseEnd - timing.requestStart) / 1000,\r\n            domreadyt: (timing.responseEnd - timing.navigationStart) / 1000,\r\n            domcompletet: (timing.domComplete - timing.domLoading) / 1000,\r\n            domrendert: (timing.domInteractive - timing.domLoading) / 1000,\r\n            scriptt: (timing.domContentLoadedEventEnd - timing.domContentLoadedEventStart) / 1000\r\n        };\r\n        performance.allt = performance.redirectt + performance.dnst + performance.tcpt + performance.responset + performance.domcompletet + performance.domrendert;\r\n        return performance;\r\n    };\r\n    return Page;\r\n}());\r\nexport { Page };\r\n","references":["/Users/shuyibin/SYB/github/web-sentry-sdk/src/util/hub.ts","/Users/shuyibin/SYB/github/web-sentry-sdk/src/type/performance.ts","/Users/shuyibin/SYB/github/web-sentry-sdk/src/util/log.ts"],"dts":{"name":"/Users/shuyibin/SYB/github/web-sentry-sdk/page.d.ts","writeByteOrderMark":false,"text":"import { PerformanceModel } from './type/performance';\r\nexport declare class Page {\r\n    private isActive;\r\n    constructor();\r\n    private init;\r\n    getPagePerformance(): undefined | PerformanceModel;\r\n}\r\n"}}
