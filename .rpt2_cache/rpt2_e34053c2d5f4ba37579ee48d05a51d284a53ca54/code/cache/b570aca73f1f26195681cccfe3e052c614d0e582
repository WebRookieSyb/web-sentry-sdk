{"code":"import { logger } from './util/log';\r\nimport { hub, EventBus } from \"./util/hub\";\r\nimport { Page } from \"./page\";\r\nimport { Global } from \"./global\";\r\nvar defaultOptions = {\r\n    getPage: true,\r\n    getError: true,\r\n    getUnloadError: true,\r\n    getClientInfo: true,\r\n    date: undefined\r\n};\r\nvar globalIns;\r\nvar pageIns;\r\nexport var init = function (options, fn) {\r\n    // 合并默认参数\r\n    options = Object.assign({}, defaultOptions, options);\r\n    // 是否开启debug\r\n    if (options.debug === true) {\r\n        // 开启logger\r\n        logger.enable();\r\n    }\r\n    logger.log('start logging ...');\r\n    if (options.getError === true) {\r\n        globalIns = new Global({\r\n            sendError: options.getError,\r\n            // sendUnhandledRejection:options.getUnhandledRejection,\r\n            sendUnloadError: options.getUnloadError\r\n        });\r\n    }\r\n    if (options.getPage === true) {\r\n        pageIns = new Page();\r\n    }\r\n};\r\nexport var close = function () {\r\n    logger.log('close sdk');\r\n    hub.emit(EventBus.CHANGE_ACTIVE, false);\r\n};\r\n","references":["/Users/shuyibin/SYB/github/web-sentry-sdk/src/type/options.ts","/Users/shuyibin/SYB/github/web-sentry-sdk/src/util/log.ts","/Users/shuyibin/SYB/github/web-sentry-sdk/src/util/hub.ts","/Users/shuyibin/SYB/github/web-sentry-sdk/src/page.ts","/Users/shuyibin/SYB/github/web-sentry-sdk/src/global.ts"],"dts":{"name":"/Users/shuyibin/SYB/github/web-sentry-sdk/sdk.d.ts","writeByteOrderMark":false,"text":"import { Options } from './type/options';\r\nexport declare const init: (options: Options, fn: Function) => void;\r\nexport declare const close: () => void;\r\n"}}
