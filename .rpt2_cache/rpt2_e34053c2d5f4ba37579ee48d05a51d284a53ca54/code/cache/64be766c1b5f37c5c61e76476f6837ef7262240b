{"code":"import * as tslib_1 from \"tslib\";\r\nimport { EventBus, hub } from './util/hub';\r\nimport { logger } from './util/log';\r\nvar Global = /** @class */ (function () {\r\n    function Global(options) {\r\n        this.isActive = true;\r\n        this.errordefo = {\r\n            t: 0,\r\n            n: 'js',\r\n            msg: '',\r\n            data: {}\r\n        };\r\n        //防止引用\r\n        this.options = tslib_1.__assign({}, options);\r\n        this.init();\r\n    }\r\n    Global.prototype.init = function () {\r\n        var _this = this;\r\n        hub.on(EventBus.CHANGE_ACTIVE, function (activeStatus) {\r\n            logger.log(\"Global accepted \" + EventBus.CHANGE_ACTIVE + \": \" + activeStatus);\r\n            _this.isActive = activeStatus;\r\n        });\r\n        this.installGlobalErrorHandle();\r\n    };\r\n    Global.prototype.installGlobalErrorHandle = function () {\r\n        this.oldErrorHandler = window.onerror;\r\n        if (this.options.sendError === true) {\r\n            window.onerror = this.trackWindowOnError.bind(this);\r\n        }\r\n        // if (this.options.sendUnhandleRejection === true) {\r\n        //     window.addEventListener('unhandledrejection', this.trackUnhandledRejection.bind(this));\r\n        // }\r\n        // 静态资源异常\r\n        if (this.options.sendUnloadError == true) {\r\n            window.addEventListener('error', this.trackUnloadError.bind(this), true);\r\n        }\r\n    };\r\n    Global.prototype.trackWindowOnError = function (msg, url, lineNo, col, error) {\r\n        alert(5);\r\n        // 防止隐式转换\r\n        if (this.isActive === false) {\r\n            logger.log(\"Global get error, but do nothing\");\r\n            return;\r\n        }\r\n        logger.log(\"Global get error\");\r\n        var defaults = Object.assign({}, this.errordefo);\r\n        //异步处理\r\n        setTimeout(function () {\r\n            // 不一定所有浏览器都支持col参数\r\n            col = col || window || 0;\r\n            defaults.msg = error && error.stack ? error.stack.toString() : msg;\r\n            defaults.t = new Date().getTime();\r\n            defaults.data = {\r\n                resourceUrl: url,\r\n                line: lineNo,\r\n                col: col\r\n            };\r\n            logger.log(\"Global track error info: \" + JSON.stringify(defaults));\r\n            hub.emit(EventBus.CATCH_ERROR, defaults);\r\n        }, 0);\r\n        //不覆盖原始的异常处理\r\n        if (this.oldErrorHandler) {\r\n            this.oldErrorHandler.apply(this, arguments);\r\n        }\r\n    };\r\n    ;\r\n    // private trackUnhandledRejection(err: PromiseRejectionEvent) {\r\n    //     if (this.isActive === false) {\r\n    //         logger.log(`Global get error, but do nothing`)\r\n    //         return;\r\n    //     }\r\n    //     logger.log(`Global get error`)\r\n    //     const error = err || err.reason;\r\n    //     const message = error.message || '';\r\n    //     const stack = error.stack || '';\r\n    // }\r\n    Global.prototype.trackUnloadError = function (err) {\r\n        alert(6);\r\n        if (this.isActive === false) {\r\n            logger.log(\"Global get error, but do nothing\");\r\n            return;\r\n        }\r\n        logger.log(\"Global get error\");\r\n        var defaults = Object.assign({}, this.errordefo);\r\n        defaults.n = 'resource';\r\n        defaults.t = new Date().getTime();\r\n        defaults.msg = err.target.localName + ' is load error';\r\n        defaults.data = {\r\n            target: err.target.localName,\r\n            type: err.type,\r\n            resourceUrl: err.target.href || err.target.currentSrc\r\n        };\r\n        if (err.target !== window) {\r\n            logger.log(\"Global track error info: \" + JSON.stringify(defaults));\r\n            hub.emit(EventBus.CATCH_ERROR, defaults);\r\n        }\r\n    };\r\n    return Global;\r\n}());\r\nexport { Global };\r\n","references":["/Users/shuyibin/SYB/github/web-sentry-sdk/src/type/error.ts","/Users/shuyibin/SYB/github/web-sentry-sdk/src/util/hub.ts","/Users/shuyibin/SYB/github/web-sentry-sdk/src/util/log.ts"],"dts":{"name":"/Users/shuyibin/SYB/github/web-sentry-sdk/global.d.ts","writeByteOrderMark":false,"text":"interface GlobalObject {\r\n    sendError: boolean;\r\n    sendUnloadError: boolean;\r\n}\r\nexport declare class Global {\r\n    private isActive;\r\n    private oldErrorHandler;\r\n    private options;\r\n    private errordefo;\r\n    constructor(options: GlobalObject);\r\n    private init;\r\n    private installGlobalErrorHandle;\r\n    private trackWindowOnError;\r\n    private trackUnloadError;\r\n}\r\nexport {};\r\n"}}
